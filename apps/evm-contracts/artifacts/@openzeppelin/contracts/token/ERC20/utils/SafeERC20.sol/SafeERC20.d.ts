// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";
import type { Address } from "viem";

export interface SafeERC20$Type {
  _format: "hh-sol-artifact-1";
  contractName: "SafeERC20";
  sourceName: "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol";
  abi: [
    {
      inputs: [
        {
          internalType: "address";
          name: "spender";
          type: "address";
        },
        {
          internalType: "uint256";
          name: "currentAllowance";
          type: "uint256";
        },
        {
          internalType: "uint256";
          name: "requestedDecrease";
          type: "uint256";
        },
      ];
      name: "SafeERC20FailedDecreaseAllowance";
      type: "error";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "token";
          type: "address";
        },
      ];
      name: "SafeERC20FailedOperation";
      type: "error";
    },
  ];
  bytecode: "0x602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a";
  deployedBytecode: "0x73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a";
  linkReferences: {};
  deployedLinkReferences: {};
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "SafeERC20",
    constructorArgs?: [],
    config?: DeployContractConfig,
  ): Promise<GetContractReturnType<SafeERC20$Type["abi"]>>;
  export function deployContract(
    contractName: "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
    constructorArgs?: [],
    config?: DeployContractConfig,
  ): Promise<GetContractReturnType<SafeERC20$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "SafeERC20",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig,
  ): Promise<{
    contract: GetContractReturnType<SafeERC20$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig,
  ): Promise<{
    contract: GetContractReturnType<SafeERC20$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "SafeERC20",
    address: Address,
    config?: GetContractAtConfig,
  ): Promise<GetContractReturnType<SafeERC20$Type["abi"]>>;
  export function getContractAt(
    contractName: "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
    address: Address,
    config?: GetContractAtConfig,
  ): Promise<GetContractReturnType<SafeERC20$Type["abi"]>>;
}
